{"version":3,"sources":["components/User.js","constants/index.js","actions/User.js","containers/User.js","containers/Nav.js","components/Nav.js","App.js","reducers/users.js","reducers/User.js","createStore.js","index.js"],"names":["User","componentWillMount","_this","props","onMount","user","componentWillReceiveProps","nextProps","onUpdate","rederRepos","_this$props","repos","error","react_default","a","createElement","map","item","href","url","rel","target","name","description","category","this","concat","React","Component","defaultProps","ACTION_TYPES","startRequest","type","payload","receiveData","response","finishRequest","fetchUser","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","categories","data","wrap","_context","prev","next","users","find","id","replace","abrupt","fetchJsonp","sent","json","t0","stop","_x","_x2","apply","arguments","connect","state","ownProps","actions","to","key","Link","App","className","containers_Nav","Switch","Route","exact","path","render","Redirect","match","containers_User","params","initialState","reducers_users","getUser","itemLength","length","index","push","html_url","undefined","reducers_User","action","objectSpread","history","createHistory","store","reduxCreateStore","combineReducers","reducers","router","routerReducer","applyMiddleware","logger","routerMiddleware","thunk","ReactDOM","es","react_router_redux_es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8069e049.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class User extends React.Component {\n  componentWillMount = () => {\n    this.props.onMount(this.props.user);\n  };\n  componentWillReceiveProps = nextProps => {\n    if (this.props.user !== nextProps.user) {\n      this.props.onUpdate(nextProps.user);\n    }\n  };\n  rederRepos = () => {\n    const { repos, error } = this.props;\n    if (error) {\n      return <p>Error Status</p>;\n    } else if (typeof repos === \"undefined\") {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <ol>\n          {repos.map(item => (\n            <li>\n              <h3>\n                <a href={item.url} rel=\"noreferrer noopener\" target=\"_blank\">\n                  {item.name}\n                </a>\n              </h3>\n              <p> {item.description} </p>\n            </li>\n          ))}\n        </ol>\n      );\n    }\n  };\n  render() {\n    const { category } = this.props;\n    return (\n      <div>\n        <h2>\n          {typeof category !== \"undefined\" ? `${category.name} repository` : \"\"}\n        </h2>\n        {this.rederRepos()}\n      </div>\n    );\n  }\n}\n\nUser.propTypes = {\n  user: PropTypes.string,\n  onMount: PropTypes.func.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  category: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n  }),\n  repos: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired\n    })\n  ),\n  error: PropTypes.bool.isRequired\n};\n\nUser.defaultProps = {\n  user: \" apple\"\n};\n","export const ACTION_TYPES = {\n  START_REQUEST: \"START_REQUEST\",\n  RECEIVE_DATA: \"RECEIVE_DATA\",\n  FINISH_REQUEST: \"FINISH_REQUEST\"\n};\n","import fetchJsonp from \"fetch-jsonp\";\nimport { ACTION_TYPES } from \"../constants\";\nimport { replace } from \"react-router-redux\";\n\nconst API_URL = \"https://api.github.com/users\";\n\nexport const startRequest = user => ({\n  type: ACTION_TYPES.START_REQUEST,\n  payload: { user }\n});\n\nconst receiveData = (user, error, response) => ({\n  type: ACTION_TYPES.RECEIVE_DATA,\n  payload: { user, error, response }\n});\n\nconst finishRequest = user => ({\n  type: ACTION_TYPES.FINISH_REQUEST,\n  payload: { user }\n});\n\nexport const fetchUser = user => {\n  return async (dispatch, getState) => {\n    const categories = getState().users.categories;\n    const category = categories.find(category => category.id === user);\n    if (typeof category === \"undefined\") {\n      dispatch(replace(\"\"));\n      return;\n    }\n\n    dispatch(startRequest(category));\n\n    try {\n      const response = await fetchJsonp(`${API_URL}/${user}/repos`);\n      const data = await response.json();\n      dispatch(receiveData(category, null, data));\n    } catch (error) {\n      dispatch(receiveData(category, error));\n    }\n    dispatch(finishRequest(category));\n  };\n};\n","import { connect } from \"react-redux\";\nimport User from \"../components/User\";\nimport * as actions from \"../actions/User\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: ownProps.user,\n  category: state.User.category,\n  repos: state.User.repos,\n  error: state.User.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onMount(user) {\n    dispatch(actions.fetchUser(user));\n  },\n  onUpdate(user) {\n    dispatch(actions.fetchUser(user));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(User);\n","import { connect } from \"react-redux\";\nimport Nav from \"../components/Nav\";\n\nconst mapStateToProps = state => ({\n  categories: state.users.categories\n});\n\nexport default connect(mapStateToProps)(Nav);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Nav({ categories }) {\n  const to = users => `/user/${users.id}`;\n  return (\n    <ul>\n      {categories.map(users => (\n        <li key={`nav-item-${users.id}`}>\n          <Link to={to(users)}>{users.name}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nNav.propTypes = {\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport User from \"./containers/User\";\nimport Nav from \"./containers/Nav\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" render={() => <Redirect to=\"/user/apple\" />} />\n          <Route\n            path=\"/user/:id\"\n            render={({ match }) => <User user={match.params.id} />}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n  categories: [\n    {\n      id: \"apple\",\n      name: \"Apple\"\n    },\n    {\n      id: \"google\",\n      name: \"Google\"\n    },\n    {\n      id: \"microsoft\",\n      name: \"Microsoftware\"\n    }\n  ]\n};\n\nexport default () => initialState;\n","import { ACTION_TYPES } from \"../constants\";\n\nconst getUser = response => {\n  const repos = [];\n  const itemLength = response.data.length;\n  for (let index = 0; index < itemLength; index += 1) {\n    const item = response.data[index];\n    repos.push({\n      name: item.name ? item.name : \"\",\n      description: item.description ? item.description : \"\",\n      url: item.html_url ? item.html_url : \"\"\n    });\n  }\n\n  return repos;\n};\n\nconst initialState = {\n  category: undefined,\n  repos: undefined,\n  error: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.START_REQUEST:\n      return {\n        category: action.payload.category,\n        repos: undefined,\n        error: false\n      };\n    case ACTION_TYPES.RECEIVE_DATA:\n      return action.payload.error\n        ? { ...state, error: true }\n        : {\n            ...state,\n            repos: getUser(action.payload.response)\n          };\n    default:\n      return state;\n  }\n};\n","import {\n  createStore as reduxCreateStore,\n  combineReducers,\n  applyMiddleware\n} from \"redux\";\nimport logger from \"redux-logger\";\nimport { routerReducer, routerMiddleware } from \"react-router-redux\";\nimport thunk from \"redux-thunk\";\nimport * as reducers from \"./reducers\";\n\nexport default function createStore(history) {\n  return reduxCreateStore(\n    combineReducers({\n      ...reducers,\n      router: routerReducer\n    }),\n    applyMiddleware(logger, routerMiddleware(history), thunk)\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport createStore from \"./createStore\";\nimport createHistory from \"history/createBrowserHistory\";\n// import createHistory from \"history/createHashHistory\";\nimport { ConnectedRouter } from \"react-router-redux\";\n\nconst history = createHistory();\nconst store = createStore(history);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter store={store} history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}